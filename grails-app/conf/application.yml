---
grails:
#  serverURL: "http://localhost:8081/ws"
#  server:
#    port: 8081
#    servlet:
#      contextPath: '/ws'
  cors:
    # using ala-cors-plugin instead of grailsCorsFilter
    enabled: true
  profile: web
  codegen:
    defaultPackage: au.org.ala.spatial.service
  config:
    locations:
      - file:/data/spatial-service/config/spatial-service-config.yml
  spring:
    transactionManagement:
      proxies: false
  gorm:
    reactor:
      # Whether to translate GORM events into Reactor events
      # Disabled by default for performance reasons
      events: false
  controllers:
    upload:
      maxFileSize: 524288000
      maxRequestSize: 524288000

info:
  app:
    name: '@info.app.name@'
    version: '@info.app.version@'
    grailsVersion: '@info.app.grailsVersion@'
    build:
      date: '@info.app.build.date@'
spring:
  main:
    banner-mode: "off"
  groovy:
    template:
      check-template-location: false

# Spring Actuator Endpoints are Disabled by Default
endpoints:
  enabled: false
  jmx:
    enabled: true

---
grails:
  mime:
    disable:
      accept:
        header:
          userAgents:
            - Gecko
            - WebKit
            - Presto
            - Trident
    types:
      all: '*/*'
      atom: application/atom+xml
      css: text/css
      csv: text/csv
      form: application/x-www-form-urlencoded
      html:
        - text/html
        - application/xhtml+xml
      js: text/javascript
      json:
        - application/json
        - text/json
      multipartForm: multipart/form-data
      pdf: application/pdf
      rss: application/rss+xml
      text: text/plain
      hal:
        - application/hal+json
        - application/hal+xml
      xml:
        - text/xml
        - application/xml
  urlmapping:
    cache:
      maxsize: 1000
  controllers:
    defaultScope: singleton
  converters:
    encoding: UTF-8
  views:
    default:
      codec: html
    gsp:
      encoding: UTF-8
      htmlcodec: xml
      codecs:
        expression: html
        scriptlets: html
        taglib: none
        staticparts: none
  spring:
    bean:
      packages:
        - 'au.org.ala.layers'
endpoints:
  jmx:
    unique-names: true

skin:
  fluidLayout: true
---
#
# au.org.ala.spatial.service config
#
data:
  dir: '/data/spatial-data'

gdal:
  dir: "/usr/local/bin/"
# To use a remote geoserver instance, set geoserver.remote.geoserver_data_dir to the geoserver_data_dir path on the
# remote server. This will cause layer files to be copied to geoserver_data_dir/data/
remote:
  geoserver_data_dir: '/data/geoserver_data_dir'

shpResolutions:
  - 0.5
  - 0.25
  - 0.1
  - 0.05
grdResolutions:
  - 0.5
  - 0.25
  - 0.1
  - 0.05
  - 0.01
biocacheServiceUrl: 'https://biocache.ala.org.au/ws'
biocacheUrl: 'https://biocache.ala.org.au'
openstreetmap:
  url: 'https://spatial.ala.org.au/osm'

slave.enable: true
service.enable: true

spatialService:
  url: "https://spatial.ala.org.au/ws"

serviceKey: ""
batch_sampling_passwords: ''
batch_sampling_points_limit: 1000000
batch_sampling_fields_limit: 1000
batch_thread_count: 3
grid_buffer_size: 40960
occurrence_species_records_filename: /data/ala/data/layers/process/density/current/records

---
#
# au.org.ala.spatial.slave config
#
spatialService.url: "http://localhost:8080/ws"
data.dir: "/data/spatial-data"
shp2pgsql.path: "/usr/bin/shp2pgsql"
gdal.dir: "/usr/bin/"
gdm.dir: "/data/spatial-data/modelling/gdm/DoGdm"

# 900000ms=15 minutes
gdm.timeout: 900000
aloc.timeout: 900000
maxent.timeout: 900000

# 30000ms
controller.timeout: 30000

# 36000000=10 hours
admin.timeout: 36000000

aloc.xmx: "6G"
aloc.threads: 4
maxent.mx: "1G"
maxent.threads: 4

sampling.threads: 4

slaveKey: ""
serviceKey: ""

# time between pushing status updates to the master for a task
statusTime: 5000
retryCount: 10
retryTime: 30000

# taskTimeoutTime
taskTimeoutTime: 900000

task:
  general:
    threads: 10
  admin:
    threads: 4
  continueOnRestart: true

#
#  CAS SETTINGS
#
#  NOTE: Some of these will be ignored if default_config exists
security:
  cas:
    casServerName: 'https://auth-test.ala.org.au'
    loginUrl: 'https://auth-test.ala.org.au/cas/login'
    logoutUrl: 'https://auth-test.ala.org.au/cas/logout'
    casServerUrlPrefix: 'https://auth-test.ala.org.au/cas'
    bypass: false # set to true for non-ALA deployment
    gateway: false
    uriExclusionFilterPattern: [ '/assets.*', '/images.*', '/css.*', '/js.*', '/less.*' ]
    uriFilterPattern: [ '/alaAdmin/*', '/alaAdmin' ]
    #if false, ticket params always proceed
    #true, only processes urls listed in authenticateOnlyIfLoggedInFilterPattern
    applyUriFiltersToTicketValidation: false
    authenticateOnlyIfLoggedInFilterPattern: [ '/master', '/master/*', '/manageLayers', '/manageLayers/*', '/admin', '/admin/*', '/layers/view/more/*', '/layer/download/*', '/workflow/*', '/workflow' ]
    disableCAS: true
    ignoreCase: true
    authCookieName: ALA-Auth-Test
    enabled: false
  oidc:
    enabled: true
    discovery-uri: 'https://auth-test.ala.org.au/cas/oidc/.well-known'
    clientId: 'change me'
    secret: 'change me'
    allowUnsignedIdTokens: true
    scope: 'openid profile email ala roles'
    alaUseridClaim: username
    logoutAction: cognito
  jwt:
    enabled: true
    discoveryUri: https://auth-test.ala.org.au/cas/oidc/.well-known
    fallbackToLegacyBehaviour: true
  core:
    roleAttribute: ala:role
  apikey:
    enabled: true
    auth:
      serviceUrl: https://auth-test.ala.org.au/apikey/
    check:
      serviceUrl: https://auth-test.ala.org.au/apikey/ws/check?apikey=
    userdetails:
      serviceUrl: https://auth-test.ala.org.au/userdetails/

#webservice:
#  jwt: true
#  jwt-scopes: openid users/read
#  client-id: second-client-id-for-machine-to-machine-comms
#  client-secret: second-client-secret-for-machine-to-machine-comms

auth.admin_role: "ROLE_ADMIN"
app.http.header.userId: "X-ALA-userId"

headerAndFooter.baseURL: 'https://www.ala.org.au/commonui-bs3-2019'
headerAndFooter.version: '2'
ala.baseURL: 'https://www.ala.org.au'
bie.baseURL: 'https://bie.ala.org.au'
bie.searchPath: '/search'

namematching.url: 'https://namematching-ws.ala.org.au'

records.url: 'https://archives.ala.org.au/archives/exports/lat_lon_taxon.zip'

api_key: ''
lists.url: 'https://lists.ala.org.au'
collections.url: 'https://collections.ala.org.au'
sandboxHubUrl: 'https://sandbox.ala.org.au/ala-hub'
sandboxBiocacheServiceUrl: 'https://sandbox.ala.org.au/biocache-service'
phyloServiceUrl: 'https://phylolink.ala.org.au'

spatialHubUrl: 'https://spatial.ala.org.au'

gazField: 'cl915'
userObjectsField: 'cl1083'

apiKeyCheckUrlTemplate: 'https://auth.ala.org.au/apikey/ws/check?apikey={0}'
#spatialService.remote: "https://spatial.ala.org.au/ws"

journalmap.api_key: ''
journalmap.url: 'https://www.journalmap.org/'

# For side by side installation with layers-service, analysis-service
legacy.workingdir: '/data/ala/data/alaspatial/'

legacy.enabled: true

#legacy compatability type
#"link" = link legacy files into new locations
#"copy" = copy legacy files into new locations
#"move" = move legacy files into new locations
#legacy.type="link"

legacy.ANALYSIS_LAYER_FILES_PATH: '/data/ala/data/layers/analysis/'
legacy.LAYER_FILES_PATH: '/data/ala/data/layers/ready'
legacy.ALASPATIAL_OUTPUT_PATH: '/data/ala/runtime/output'

grails.plugin.elfinder.rootDir: '/data/spatial-service'

i18n.override.dir: '/data/spatial-service/config/i18n/'


skin:
  orgNameLong: 'Atlas of Living Australia'
  orgNameShort: 'ALA'
  favicon: 'https://www.ala.org.au/app/uploads/2019/01/cropped-favicon-32x32.png'


#layers-store config

#Threads created for each batch intersection and each individual shape file
layers_store.BATCH_THREAD_COUNT: 3

#Set LAYER_INDEX_URL to use REMOVE layer intersections.
#layers_store.LAYER_INDEX_URL: https://spatial.ala.org.au/layers-service

#Use local layer files for sampling or the /intersect/batch service provided by LAYER_INDEX_URL
#layers_store.LOCAL_SAMPLING: false
layers_store.LOCAL_SAMPLING: true

# Set intersect config reload time in ms
layers_store.CONFIG_RELOAD_WAIT: 12000000

#Comma separated shape file fields to preload, or 'all'
#layers_store.PRELOADED_SHAPE_FILES: all
#layers_store.PRELOADED_SHAPE_FILES: cl22,cl20

# Grid intersection buffer size in bytes.  Must be multiple of 64.
# Only applies to grids > 80MB.
# layers_store.GRID_BUFFER_SIZE=4096
layers_store.GRID_BUFFER_SIZE: 40960

# Number of GridCacheReader objects to open.
layers_store.GRID_CACHE_READER_COUNT: 5

# layers_store ingestion
layers_store.CAN_INGEST_LAYERS: false
layers_store.CAN_UPDATE_LAYER_DISTANCES: false
layers_store.CAN_UPDATE_GRID_CACHE: false
layers_store.CAN_GENERATE_ANALYSIS_FILES: false
layers_store.CAN_INTERSECT_LAYERS: false
layers_store.CAN_GENRATE_THUMBNAILS: false

#geoserver styles with the name <fieldId>_style exist. e.g. cl21_style
layers_store.FIELD_STYLES: true

layers_store.GEONETWORK_URL: 'https://spatial.ala.org.au/geonetwork'

distributions.cache.dir: "/data/${appName}/mapCache/"
distributions.geoserver.image.url: "/ALA/wms?service=WMS&version=1.1.0&request=GetMap&layers=ALA:aus1,ALA:Distributions&styles=&bbox=109,-47,157,-7&srs=EPSG:4326&format=image/png&width=400&height=400&viewparams=s:"

#download.layer.licence_levels: ["1"]
download.layer.licence_levels: [ ]
reporting.excludedUsers: [ '1901','92092','71707','1493','53099','34','9965','47075','27078','44','9200','82292','10549','9048','11359','61','35022','13','28057','19807','27583','27190','35','48604','47326','35774','8443','8516','46293','4228','89299','89300','28712' ]

---

hibernate:
  # flush mode changed in Grails 3.3 / Gorm 6.1 from AUTO to COMMIT
  # This means each db write should be in a transaction.
  cache:
    queries: false
    use_second_level_cache: false
    use_query_cache: false


# spring-session config
spring:
  session:
    store-type: "none" # "redis"
#  redis:
#    host: "localhost"
#    port: 6379
#    password: ""
#logging:
#  level:
#    root: INFO

geoserver:
  canDeploy: true

  spatialservice:
    #if colocated, geoserver will load data from spatial service data folder, /data/spatial-data by default
    colocated: true
  remote:
    #In some cases, geoserver need to know its data folder.
    geoserver_data_dir: "/data/geoserver_data_dir"

environments:
  development:
    grails:
      server:
        use-forward-headers: true
      serverURL: http://localhost:8081/ws
    server:
      port: 8081
      servlet:
        context-path: '/ws'
    gdal:
      dir: "/Library/Frameworks/GDAL.framework/Programs"

    spatialHubUrl: "http://devt.ala.org.au:8079/"
    # Slave config
    spatialService:
      url: "http://devt.ala.org.au:8081/ws"
      remote: "https://spatial-test.ala.org.au/ws"
    geoserver:
      # use localhost to play nice with locally running geoserver docker instance.
      url: 'http://localhost:8080/geoserver'
      #url: 'https://spatial-test.ala.org.au/geoserver'
      username: 'admin'
      password: 'geoserver'

    dataSource:
      pooled: true
      jmxExport: true
      driverClassName: org.postgresql.Driver
      dialect: org.hibernate.spatial.dialect.postgis.PostgisPG9Dialect
      url: 'jdbc:postgresql://localhost:5432/layersdb'
      dbCreate: update
      username: layers
      password: layers
      # logSql: true

  test:
    dataSource:
      dbCreate: update
      url: jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE

  production:
    dataSource:
      #aws-spatial-prod.ala.org.au
      dbCreate: update
      logSql: false
      dialect: org.hibernate.spatial.dialect.postgis.PostgisPG9Dialect
      properties:
        jmxEnabled: true
        initialSize: 5
        maxActive: 50
        minIdle: 5
        maxIdle: 25
        maxWait: 10000
        maxAge: 600000
        timeBetweenEvictionRunsMillis: 5000
        minEvictableIdleTimeMillis: 60000
        validationQuery: SELECT 1
        validationQueryTimeout: 3
        validationInterval: 15000
        testOnBorrow: true
        testWhileIdle: true
        testOnReturn: false
        jdbcInterceptors: ConnectionState
        defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED

openapi:
  title: SpatialService REST services
  description: REST services for interacting with the spatial-service webapp
  terms: https://www.ala.org.au/terms-of-use
  contact:
    name: Support
    email: support@ala.org.au
  license:
    name: Mozilla Public License 1.1
    url: https://www.mozilla.org/en-US/MPL/1.1/
  version: '@info.app.version@'
  cachetimeoutms: 4000

# Allow setting a fixed locale to prevent number formatting issues: https://github.com/AtlasOfLivingAustralia/spatial-service/issues/247
#useFixedLocale: en